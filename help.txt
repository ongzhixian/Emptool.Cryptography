
This is the minimal that works! 
Note: The results directory specified are created in the folder of test project.
dotnet test --logger trx --results-directory ./results .\Emptool.Cryptography.Tests\

dotnet test --logger "console;verbosity=normal"

LoggerVerbosity 
    Diagnostic
    Detailed
    Normal
    Minimal
    Quiet
    

dotnet test --logger "console;verbosity=detailed;LogFileName=results" --results-directory C:\src\github.com\ongzhixian\EmptoolRoot\Emptool.Loggers .\Emptool.Cryptography.Tests\

dotnet test --logger "trx;LogFileName=x-results.trx" --results-directory ./results .\Emptool.Cryptography.Tests\

dotnet test --logger "console;LogFileName=x-results.trx" --results-directory ./results .\Emptool.Cryptography.Tests\

dotnet test --results-directory ./results .\Emptool.Cryptography.Tests\

Specifies a logger for test results. Unlike MSBuild, dotnet test doesn't accept abbreviations: instead of -l "console;v=d" use -l "console;verbosity=detailed".

dotnet test available test results logger

dotnet test "myproject.csproj" --logger "trx;LogFileName=path\to\tests\folder\results.trx" 
or 

dotnet test "myproject.csproj" -l:"trx;LogFileName=path\to\tests\folder\results.trx"


Usage: dotnet test [options] <PROJECT> [[--] <RunSettings arguments>...]]



Arguments:
  <PROJECT>   The project file to operate on. If a file is not specified, the command will search the current directory for one.

Options:
  -h, --help                               Show command line help.
  -s, --settings <SETTINGS_FILE>           The settings file to use when running tests.
  -t, --list-tests                         List the discovered tests instead of running the tests.
  --filter <EXPRESSION>                    Run tests that match the given expression.
                                           Examples:
                                           Run tests with priority set to 1: --filter "Priority = 1"
                                           Run a test with the specified full name: --filter "FullyQualifiedName=Namespace.ClassName.MethodName"
                                           Run tests that contain the specified name: --filter "FullyQualifiedName~Namespace.Class"
                                           See https://aka.ms/vstest-filtering for more information on filtering support.
                                           
  -a, --test-adapter-path <ADAPTER_PATH>   The path to the custom adapters to use for the test run.
  -l, --logger <LOGGER>                    The logger to use for test results.
                                           Examples:
                                           Log in trx format using a unqiue file name: --logger trx
                                           Log in trx format using the specified file name: --logger "trx;LogFileName=<TestResults.trx>"
                                           See https://aka.ms/vstest-report for more information on logger arguments.
  -c, --configuration <CONFIGURATION>      The configuration to use for running tests. The default for most projects is 'Debug'.
  -f, --framework <FRAMEWORK>              The target framework to run tests for. The target framework must also be specified in the project file.
  -o, --output <OUTPUT_DIR>                The output directory to place built artifacts in.
  -d, --diag <LOG_FILE>                    Enable verbose logging to the specified file.
  --no-build                               Do not build the project before testing. Implies --no-restore.
  -r, --results-directory <RESULTS_DIR>    The directory where the test results will be placed.
                                           The specified directory will be created if it does not exist.
  --collect <DATA_COLLECTOR_NAME>          The friendly name of the data collector to use for the test run.
                                           More info here: https://aka.ms/vstest-collect
  --blame                                  Run the tests in blame mode. This option is helpful in isolating a problematic test causing the test host to crash.
                                           Outputs a 'Sequence.xml' file in the current directory that captures the order of execution of test before the crash.
  --no-restore                             Do not restore the project before building.
  -v, --verbosity <LEVEL>                  Set the MSBuild verbosity level. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].


RunSettings arguments:
  Arguments to pass as RunSettings configurations. Arguments are specified as '[name]=[value]' pairs after "-- " (note the space after --). 
  Use a space to separate multiple '[name]=[value]' pairs.
  See https://aka.ms/vstest-runsettings-arguments for more information on RunSettings arguments.
  Example: dotnet test -- MSTest.DeploymentEnabled=false MSTest.MapInconclusiveToFailed=True
